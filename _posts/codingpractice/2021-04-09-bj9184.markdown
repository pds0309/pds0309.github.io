---
layout: post
title: 백준-9184-신나는함수실행 (java)
date: 2021-04-09 11:05:10 +0900
category2: codingpractice
category: Study Note
tag: [백준 , dp]
---

## 백준-9184-신나는 함수 실행

---
### [문제설명링크   ](https://www.acmicpc.net/problem/9184)
<br>  
  
* [풀이](#풀이)
* [코드](#자바-풀이-코드)  

<br>  

### 문제요약 

*재귀함수 w(a, b, c)가 주어질 때 결과가 잘 나오게 구현하면 된다.
<br>  


<br>
### 입력<br>
* 입력은 세 정수 a, b, c로 이루어져 있으며, 한 줄에 하나씩 주어진다. 
* 입력의 마지막은 -1 -1 -1로 나타내며, 세 정수가 모두 -1인 경우는 입력의 마지막을 제외하면 없다.


### 출력  <br>   

*  w(a, b, c)



### 입력예시<br>  

1 1 1<br>
2 2 2<br>
10 4 6<br>
50 50 50<br>
-1 7 18<br>
-1 -1 -1<br>

### 출력예시<br>    

w(1, 1, 1) = 2<br>
w(2, 2, 2) = 4<br>
w(10, 4, 6) = 523<br>
w(50, 50, 50) = 1048576<br>
w(-1, 7, 18) = 1<br>
 

<br>

### 풀이<br>

1. 재귀함수를 그대로 함수로 만든다.
2. 재귀함수 결과를 메모이제이션 할 배열을 만들고 함수에 처리를 추가한다.
3. 입력받아서 출력한다.


### 자바 풀이 코드<br>  

```java
public class Main {
//메모이제이션 배열 선언 
// 재귀함수에서 하나라도 20넘으면 20 20 20 으로처리하기때문에 21개의 공간만 만든다.
    static int arr[][][] = new int[21][21][21];

    public static void main(String[] args) throws IOException {
        BufferedReader b = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        StringBuilder sb = new StringBuilder();
        while (true) {
//입력
            st = new StringTokenizer(b.readLine(), " ");
            int A = Integer.parseInt(st.nextToken());
            int B = Integer.parseInt(st.nextToken());
            int C = Integer.parseInt(st.nextToken());
// 모두 -1이면 종료
            if (A == -1 && B == -1 && C == -1) {
                break;
            }
//출력
            sb.append("w(" + A + ", " + B + ", " + C + ") = " + w(A, B, C)).append("\n");
        }
        System.out.println(sb);
    }

//재귀함수
    public static int w(int a, int b, int c) {

// 메모이제이션 배열에 값이 있다면 함수를 돌지 말고 있는 값을 리턴한다.
// 배열 범위가 0~20이기 때문에 a, b, c 가 모두 0~20 범위인지 먼저 확인하고 배열을 검사한다.
        if ( 0 <= a && a <= 20 && 0 <= b && b <= 20 && 0 <= c && c <= 20 && arr[a][b][c] != 0) {
            return arr[a][b][c];
        }
// 밑으로는 주어진 재귀함수 내용 그대로이다.
        if (a <= 0 || b <= 0 || c <= 0) {
            return 1;
        }

        if (a > 20 || b > 20 || c > 20) {
            return arr[20][20][20] = w(20, 20, 20);
        }

        if (a < b && b < c) {
            return arr[a][b][c] = w(a, b, c - 1) + w(a, b - 1, c - 1) - w(a, b - 1, c);
        }

        return arr[a][b][c] = w(a - 1, b, c) + w(a - 1, b - 1, c) + w(a - 1, b, c - 1) - w(a - 1, b - 1, c - 1);

    }
}
```


#### 체감 난이도 : 하<br>
* 아직 재귀함수가 너무 어렵지만 이 문제에는 재귀함수 자체가 나와있었기 때문에 쉬웠다.
